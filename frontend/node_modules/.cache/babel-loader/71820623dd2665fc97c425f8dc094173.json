{"ast":null,"code":"var _jsxFileName = \"/Users/yujis/Documents/fullstack/React-Python/Typescript_Django_todoapp_20221005/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { API_URL } from \"./API.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [text, settext] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  //  DB内に保存されている全ての値を表示させる。\n  useEffect(() => {\n    axios.get(API_URL + \"todo_list/\").then(res => setTodos(res.data));\n  }, []); // put axios settings\n\n  const handleChange = e => {\n    settext(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // todo  作成\n\n    const newTodo = {\n      id: todos.length,\n      text: text,\n      completed: false\n    };\n    axios.post(API_URL + \"create/\", newTodo).then(() => {\n      console.log(\"todo created\");\n    });\n    setTodos([newTodo, ...todos]);\n    settext(\"\");\n  };\n\n  const handleEdit = (id, text) => {\n    const newTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.text = text; // todo の内容を更新。todoはobject型でid, text, compleatedを更新させる。\n\n        axios.post(API_URL + \"update/\" + todo.id + \"/\", todo).then(() => {\n          console.log(\"todo Edit updated\");\n        });\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const handleCheckd = (id, completed) => {\n    const newTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !completed;\n        axios.post(API_URL + \"update/\" + todo.id + \"/\", todo).then(() => {\n          console.log(\"todo cheackd updated\");\n        });\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const handleDelete = id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    axios.post(API_URL + \"update/\" + todo.id + \"/\", todo).then(() => {\n      console.log(\"todo cheackd updated\");\n    });\n    setTodos(newTodos);\n  }; // axios set end\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Todolist with TypeScript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: e => {\n        handleSubmit(e);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          handleChange(e);\n        },\n        className: \"inputText\",\n        value: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\u4F5C\\u6210\",\n        className: \"submitButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            handleEdit(todo.id, e.target.value);\n          },\n          className: \"EditText\",\n          value: todo.text,\n          disabled: todo.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => {\n            handleCheckd(todo.id, todo.completed);\n          },\n          className: \"EditText\",\n          value: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleDelete(todo.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OkzGnub2DFUkouIossesxTTzw8U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","API_URL","App","text","settext","todos","setTodos","get","then","res","data","handleChange","e","target","value","handleSubmit","preventDefault","newTodo","id","length","completed","post","console","log","handleEdit","newTodos","map","todo","handleCheckd","handleDelete","filter"],"sources":["/Users/yujis/Documents/fullstack/React-Python/Typescript_Django_todoapp_20221005/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport axios from 'axios';\nimport { API_URL } from \"./API.js\"\n\nfunction App() {\n\n  const [text, settext] = useState(\"\");\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  type Todo = {\n    id: number;\n    text: string;\n    completed: boolean;\n  };\n\n  //  DB内に保存されている全ての値を表示させる。\n  useEffect(() => {\n    axios.get(API_URL + \"todo_list/\")\n      .then(res => setTodos(res.data));\n  }, []);\n\n  // put axios settings\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    settext(e.target.value)\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // todo  作成\n    const newTodo: Todo = {\n      id: todos.length,\n      text: text,\n      completed: false,\n    };\n\n    axios.post(API_URL + \"create/\", newTodo)\n      .then(() => {\n        console.log(\"todo created\");\n      })\n\n    setTodos([newTodo, ...todos]);\n    settext(\"\");\n  };\n\n  const handleEdit = (id: number, text: string) => {\n\n    const newTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.text = text;\n        // todo の内容を更新。todoはobject型でid, text, compleatedを更新させる。\n        axios.post(API_URL + \"update/\" + todo.id + \"/\", todo)\n          .then(() => {\n            console.log(\"todo Edit updated\")\n          })\n      }\n      return todo;\n    });\n\n    setTodos(newTodos);\n  };\n\n  const handleCheckd = (id: number, completed: boolean) => {\n\n    const newTodos = todos.map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !completed;\n        axios.post(API_URL + \"update/\" + todo.id + \"/\", todo)\n          .then(() => {\n            console.log(\"todo cheackd updated\")\n          })\n      }\n      return todo;\n    });\n\n    setTodos(newTodos);\n\n  };\n\n  const handleDelete = (id: number) => {\n    const newTodos = todos.filter((todo) => todo.id !== id);\n    axios.post(API_URL + \"update/\" + todo.id + \"/\", todo)\n      .then(() => {\n        console.log(\"todo cheackd updated\")\n      })\n    setTodos(newTodos);\n  };\n\n  // axios set end\n\n  return (\n    <div className=\"App\">\n      <h2>Todolist with TypeScript</h2>\n      <form action=\"\" onSubmit={(e) => { handleSubmit(e) }}>\n        <input type=\"text\" onChange={(e) => { handleChange(e) }} className=\"inputText\" value={text} />\n        <input type=\"submit\" value=\"作成\" className=\"submitButton\" />\n      </form>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>\n            <input type=\"text\"\n              onChange={(e) => { handleEdit(todo.id, e.target.value) }}\n              className=\"EditText\"\n              value={todo.text}\n              disabled={todo.completed} />\n            <input type=\"checkbox\"\n              onChange={(e) => { handleCheckd(todo.id, todo.completed) }}\n              className=\"EditText\"\n              value={todo.text} />\n            <button onClick={(e) => handleDelete(todo.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}